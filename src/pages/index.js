import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import jsonDataProducts from '../../data/products.json';
import jsonDataTodos from '../../data/todos.json';
import { DotLoader } from 'react-spinners';
import { useEffect, useState } from 'react';

export default function Home() {

  const [navItemsArr, setNavItemsArr] = useState([]);
  const [isLoading, setIsloading] = useState(false);
  const [dataFetched, setDataFetched] = useState(false);
  const [tableDisplayed, setTableDisplayed] = useState(false);
  const [tableData, setTableData] = useState([]);
  const [tableColumns, settableColumns] = useState([]);
  const [mainArr, setMainArr] = useState([]);

  useEffect(() => {
    const keys = Object.keys(jsonDataProducts);
    const arrayKeys = keys.filter(key => Array.isArray(jsonDataProducts[key]));
    setNavItemsArr(arrayKeys);
  }, []);

  const fetchProductData = () => {
    setIsloading(true);
    setTimeout(() => {
      const keys = Object.keys(jsonDataProducts);
      const arrayKeys = keys.filter(key => Array.isArray(jsonDataProducts[key]));
      setNavItemsArr(arrayKeys);
      setIsloading(false);
      setDataFetched(true);
      setMainArr(jsonDataProducts);
    }, 1000);
  }

  const fetchTodoData = () => {
    setIsloading(true);
    setTimeout(() => {
      const keys = Object.keys(jsonDataTodos);
      const arrayKeys = keys.filter(key => Array.isArray(jsonDataTodos[key]));
      setNavItemsArr(arrayKeys);
      setMainArr(jsonDataTodos);
      setIsloading(false);
      setDataFetched(true)
    }, 1000);
  }

  const navItemClick = (obj) => {
    var itemArr = mainArr[obj];
    const columns = Object.keys(itemArr[0]).filter((obj) => obj !== 'images').filter((obj) => obj !== 'thumbnail').filter((obj) => obj !== 'description');
    settableColumns(columns)
    setTableData(mainArr[obj]);
    setTableDisplayed(true)
  }



  return (
    <>
      <Head>
        <title>Mock App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main}`}>
        {!isLoading && !dataFetched && !tableDisplayed && <div className={styles.btnWrapper}>
          <button onClick={() => fetchProductData()}>Fetch products Data</button>
          <button onClick={() => fetchTodoData()}>Fetch todos Data</button>
        </div>}
        {!isLoading && dataFetched && !tableDisplayed && <div className={styles.flexFlowWrapper}>
          {
            navItemsArr.map((obj, index) => {
              return (
                <button key={index} className={styles.navItem} onClick={() => navItemClick(obj)}>{obj}</button>
              )
            })
          }
        </div>}
        {tableDisplayed &&
          <div className={styles.tableContainer}>
            <table className={styles.table}>
              <thead>
                <tr className={styles.th}>
                  {tableColumns.map((column, index) => (
                    <th className={styles.th} key={index}>{column}</th>
                  ))}
                </tr>
              </thead>
              <tbody>
                {tableData.map((row, rowIndex) => (
                  <tr key={rowIndex}>
                    {tableColumns.map((column, columnIndex) => (
                      <td key={columnIndex}>{row[column]}</td>
                    ))}
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        }
        {isLoading && <DotLoader color="#36d7b7" size={150} />}
      </main>
    </>
  )
}
